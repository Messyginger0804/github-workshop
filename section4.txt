Section 3: Collaborating with GitHub

Remote Repositories
- `git remote`: Manage remote repositories.
  - Add a remote repository: `git remote add origin https://github.com/username/repository.git`
  - View remote repositories: `git remote -v`
  - Explanation: This command is used to manage remote repository connections. Adding a remote links your local repository to a remote server, making it possible to push and pull changes.

Workflow Example:
1. **Pull Changes from GitHub**:
   - Command: `git pull origin <branch-name>`
   - Explanation: This command fetches and merges changes from the specified branch on the remote repository to your local repository. It's how you keep your local repository up to date with the latest changes.
 

2. Stage Changes:

    -Command: git add <file> or git add .
    -Explanation: This stages the specified file(s) for the next commit. Use git add . to stage all changes in the working directory.

3. Command: git commit -m "Your commit message"
    -Explanation: This saves the staged changes along with a descriptive message explaining what was changed and why.

    -git commit -m "Added new feature to the project"

4.  Push Changes to GitHub:

    - Command: git push origin <branch-name>
    - Explanation: This uploads your local changes to the specified branch on the remote repository. It's how you share your changes with others.

    git push origin main
    Combined Command:

P.S. You can combine the staging and committing steps into a single command:

git add . && git commit -m "Added new feature to the project"

then git push