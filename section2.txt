Section 2: Basic Git Commands

Working with Repositories
- `git clone`: Clone an existing repository from a remote server (e.g., GitHub) to your local machine.
  - Command: `git clone https://github.com/username/repository.git`
  - Explanation: This copies the entire repository, including its history, from the remote server to your local machine.

Tracking Changes
- `git status`: Check the status of the working directory and staging area.
  - Command: `git status`
  - Explanation: This shows the current state of the working directory and staging area, including which files are staged for the next commit, which files have changes that are not staged, and which files are not being tracked by Git. It's useful for getting a snapshot of what’s going on in your repository.

Branching and Switching
- `git branch`: Create, list, or delete branches.
  - Create a branch: `git branch <branch-name>`
  - List branches: `git branch`
  - Delete a branch: `git branch -d <branch-name>`
  - Explanation: This command lets you manage branches. Creating branches allows you to work on different features or fixes independently. Listing branches shows all the branches in the repository, with an asterisk (*) next to the current branch. Deleting a branch removes it from the repository.

- `git switch`: Switch between branches.
  - Switch to an existing branch: `git switch <branch-name>`
  - Create and switch to a new branch: `git switch -c <branch-name>`
  - Explanation: This command is used to change the current working branch. It’s an alternative to `git checkout` specifically for switching branches. Creating and switching to a new branch (`-c` option) combines branch creation and switching into a single command.